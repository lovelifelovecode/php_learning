str_replace()
str_ireplace()
addslashes()
stripslashes()
strcmp()
strcasecmp()
strnatcmp()
strnatcasecmp()
strncmp()
strstr()
stristr()
substr_count()
strpos()
explode()
implode()
sort()
rsort()
asrot()
arsort()
ksort()
krsort()
gettype()用来取得变量的类型。返回的类型字符串可能为下列字符串其中之一：integer、double、string、array、object、unknown type
is_numeric ( mixed var ): //检验测定变量是不是为数码或数码字符串 
is_bool(): //检验测定变量是不是是布尔型 
is_float(): //检验测定变量是不是是浮点型 和is_double，is_real()都同样的用法 
is_int(): //检验测定变量是不是是整儿is_integer()同样的用法 
is_string(): //检验测定变量是不是是字符串 
is_object(): //检验测定变量是不是是一个对象 
is_array(): //检验测定变量是不是是数组 
is_null(): //检验测定变量是不是为 灭茬 值是不是是灭茬巨细写敏感
ps:
$a = 0;
if(is_bool($a)){
                echo 'good';
}else{
                echo 'king';
}

ps:echo (trim('??xiao?','?'));

htmlentities()
preg_match —执行一个正则表达式匹配

正则表达式语法规则：
行定位符：“^”表示行的开始；“$”表示行的结尾。ps:^mr，匹配mr开头的字符串，例如mrsoft,mrbook.
排除字符：“^”这个字符在开头是表示行的开始，如果是在中间出现是“非”的意思。ps:[^a-zA-Z]的意思是匹配非字            母字符串
限定符  ：限定符用来指定正则表达式的一个给定组件必须要出现多少次才能满足匹配。有*或+或?或{n}或{n,}或{n,m}   共6种。
  *、+和?限定符都是贪婪的，因为它们会尽可能多的匹配文字，只有在它们的后面加上一个?就可以实现非贪婪或最小匹配。

    　　 正则表达式的限定符有：
      字符  描述 
        *  匹配前面的子表达式零次或多次。例如，zo* 能匹配 "z" 以及 "zoo"。* 等价于{0,}。 
        +  匹配前面的子表达式一次或多次。例如，'zo+' 能匹配 "zo" 以及 "zoo"，但不能匹配 "z"。+ 等价于 {1,}。 
        ?  匹配前面的子表达式零次或一次。例如，"do(es)?" 可以匹配 "do" 或 "does" 中的"do" 。? 等价于 {0,1}。 
        {n}  n 是一个非负整数。匹配确定的 n 次。例如，'o{2}' 不能匹配 "Bob" 中的 'o'，但是能匹配 "food" 中的两个 o。 
        {n,}  n 是一个非负整数。至少匹配n 次。例如，'o{2,}' 不能匹配 "Bob" 中的 'o'，但能匹配 "foooood" 中的所有 o。'o{1,}' 等价于 'o+'。'o{0,}' 则等价于 'o*'。 
        {n,m}  m 和 n 均为非负整数，其中n <= m。最少匹配 n 次且最多匹配 m 次。例如，"o{1,3}" 将匹配 "fooooood" 中的前三个 o。'o{0,1}' 等价于 'o?'。请注意在逗号和两个数之间不能有空格。

. 匹配除换行符\n之外的任何单字符。要匹配.，请使用\.

指定预定义的字符集
字符    含义
\d      任意一个十进制数字[0-9]
\D      任意一个非十进制数字
\s      任意一个空白字符(空格、换行符、换页符、回车符、字表符)
\S      任意一个非空白字符
\w      任意一个单词字符
\W      任意个非单词字符

strtotime()
echo date("Y-m-d H:i:s",strtotime('27 February 2016'));

<?php
    $dbms = 'mysql';
    $host = 'localhost';
    $user = 'root';
    $pwd = 'skyuse2017';
    $dbName = 'test';
    $dsn = "$dbms:host=$host;dbname=$dbName";
    try{
        $pdo = new PDO($dsn,$user,$pwd);
        echo 'king good';
    }catch(exception $e){
        echo $e->getMessage();
    }
?>
